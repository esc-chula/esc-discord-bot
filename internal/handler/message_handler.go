package handler

import (
	"fmt"
	"log"
	"regexp"

	"github.com/bwmarrin/discordgo"
	"github.com/esc-chula/esc-discord-bot/internal/instance"
)

type messageHandler struct {
}

func NewMessageHandler() *messageHandler {
	return &messageHandler{}
}

func (h *messageHandler) MessageCreate(s *discordgo.Session, m *discordgo.MessageCreate) {
	var err error

	if m.Author.ID == s.State.User.ID {
		return
	}

	if len(m.Content) == 10 {
		validStudentId, _ := regexp.MatchString(`^6\d{7}21$`, m.Content)
		if validStudentId {
			_, err = s.ChannelMessageSend(m.ChannelID, "üîç ‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...")
			if err != nil {
				log.Printf("User: %v, Error sending message: %v", m.Author.ID, err)
				return
			}

			usersData := instance.GetUsersInstance()
			for _, user := range usersData {
				if user["StudentId"] == m.Content {
					_, err = s.ChannelMessageSend(m.ChannelID, fmt.Sprintf("‡∏Ñ‡∏∏‡∏ì‡∏Ñ‡∏∑‡∏≠ \n\nüë§ **%v** \n\n‚úÖ  ‡∏´‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå `confirm` \n‚ùå  ‡∏´‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏¥‡∏î‡πÉ‡∏´‡πâ‡∏û‡∏¥‡∏°‡∏û‡πå `cancel`", user["FullName"]))
					if err != nil {
						log.Printf("User: %v, Error sending message: %v", m.Author.ID, err)
						return
					}
					return
				}
			}

			_, err = s.ChannelMessageSend(m.ChannelID, "‚ùå  **‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì**\n‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Å‡∏£‡∏≠‡∏Å Contact List ‡πÅ‡∏•‡πâ‡∏ß‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á (https://intania.link/esc67-contact-list-form)\n‡∏´‡∏£‡∏∑‡∏≠‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ù‡πà‡∏≤‡∏¢ TECH ‡πÑ‡∏î‡πâ‡πÄ‡∏•‡∏¢")
			if err != nil {
				log.Printf("User: %v, Error sending message: %v", m.Author.ID, err)
				return
			}
		} else {
			_, err = s.ChannelMessageSend(m.ChannelID, "‚ùå  ‡∏£‡∏´‡∏±‡∏™‡∏ô‡∏¥‡∏™‡∏¥‡∏ï‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏Å‡∏£‡∏≠‡∏Å‡πÉ‡∏´‡∏°‡πà‡∏≠‡∏µ‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á")
			if err != nil {
				log.Printf("User: %v, Error sending message: %v", m.Author.ID, err)
				return
			}
		}
	}
}
